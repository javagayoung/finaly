<%@page import="com.fasterxml.jackson.databind.ObjectMapper"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"  %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<style>
/* 어사이드 강조 */
.aside-ams-receipt{
	width: 196px;
	border-radius: 16px 0px 0px 16px;
	background: var(--bg-02, #DBF2F4);
	height: 56px;
	border-right: 4px solid var(--ci-01, #0ABAB5);
	margin-left: 4px;
	color: var(--ci-01, #0ABAB5);
}
/* 접수 페이지 전용 시작 */
.info-input{
	height: 32px;
	margin-bottom: 45px;
	width: 180px;
}

.patientInfoLeft{
	text-align: right;
	width: 80px;
}

.patientInfoRight{
	text-align: left;
	width: 180px;
}

.inH2{
	margin-bottom: 45px;
}
.getPatientInfo{
	gap: 72px;
	margin: 0px 10px 0px 10px;
}
.patient-list{
	justify-content: normal;
	
}
.rcptCenter {
	height: 416px;
	width: 592px;
	margin-bottom: 8px;
}

.docOfcWrap {
	width: 660px;
}

.docOfc{
	height: 365px;	
	width: 300px;
	float: left;
	margin: 4px 2px 4px 2px;
}

.search{
	background-image: url(/resources/images/Search.png);
	background-repeat: no-repeat;
	background-position: 372px center;
	width: 412px;
	height: 48px;
	margin-left: 18px;
}

.btn-state {
	font-size: 10.9px;
    padding: 4px 8px;
    width: 100%;
}
/* 자동 완성 창 */
.autocomplete{
	width: 400px;
	background-color: #F8F9FC;
	margin-left: 140px;
	position: absolute;
	top: 205px;
	visibility: hidden;
}

.autocomplete.active {
    visibility: visible;
}

/* 현재 선택된 검색어 */
.autocomplete > div.active {
  background: #e0e5f6;
  color: #000;
}

/* 검색 창 강조 색 */
.option:hover{
	background-color:#EDF8F9;
}
/* 접수 페이지 전용 끝 */

/* 환자 선택 시 강조 */
.selected {
    background-color: #EDF8F9;
}

</style>
<html>
<body>
	<div class="dduk-body-border patient-list">
		<div class="dduk-title-area">
			<h2>환자 목록</h2>
			<br/>
			<div class="dduk-row">
				<div class="inner-tab" id="inner-tab1" style="border-bottom: 3px solid var(--ci-01, #0ABAB5);">
					<h3>대기</h3>
				</div>
				<div class="inner-tab" id="inner-tab2">
					<h3>완료</h3>
				</div>
			</div>
		</div>
<!-- 		대기환자 테이블 -->
		<div class="dduk-x-pd8">
		<table class="waiting">
			<tr class="tr-padding">
				<th class="td-padding gray-text" style="width:40px;">No</th>
				<th class="td-padding gray-text paName" style="width:90px;">이름</th>
				<th class="td-padding gray-text" style="width:90px">생년월일</th>
				<th class="td-padding gray-text" style="text-align:center">상태</th>
			</tr>
			<c:forEach var="patient" items="${waitingVOList}" varStatus="status">
				<tr class="tr-padding tr-paInfo" data-pareg="${patient.paReg}">
					<td class="td-padding">
						${status.count}
					</td>
					<td height="48px" class="td-padding">
						<c:choose>
					        <c:when test="${fn:length(patient.paName) gt 9}">
					        <c:out value="${fn:substring(patient.paName, 0, 7)}">
					        </c:out>...</c:when>
					        <c:otherwise>
					        <c:out value="${patient.paName}">
					        </c:out></c:otherwise>
						</c:choose>
					</td>
					<td class="td-padding">
						<c:choose>
					        <c:when test="${fn:substring(patient.paReg, 0, 1) gt 0}">
					        19<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:when>
					        <c:otherwise>
					        20<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:otherwise>
						</c:choose>
						-${fn:substring(patient.paReg, 2, 4)}-${fn:substring(patient.paReg, 4, 6)}
					</td>
					<td class="td-padding">
			        	<c:if test="${patient.hsrpState=='RCST02'}">
				        	<button class='dduk-btn-disabled btn-state'>호출완료</button>
			        	</c:if>
			        	<c:if test="${patient.hsrpState=='RCST01'}">
			        	<button class='dduk-btn-info btn-state'>대기중</button>
			        	</c:if>
					</td>
				</tr>
			</c:forEach>
		</table>
		</div>
<!-- 		완료환자 테이블 -->
		<div class="dduk-x-pd8">
		<table class="complete" style="display:none;">
			<tr class="tr-padding">
				<th class="td-padding gray-text" style="width:40px;">No</th>
				<th class="td-padding gray-text paName" style="width:90px;">이름</th>
				<th class="td-padding gray-text" style="width:90px">생년월일</th>
				<th class="td-padding gray-text" style="text-align:center">상태</th>
			</tr>
			<c:forEach var="completePatient" items="${completeVOList}" varStatus="status">
				<tr class="tr-padding tr-paInfo" data-pareg="${completePatient.paReg}">
					<td class="td-padding">
						${status.count}
					</td>
					<td height="48px" class="td-padding">
						<c:choose>
					        <c:when test="${fn:length(completePatient.paName) gt 9}">
					        <c:out value="${fn:substring(completePatient.paName, 0, 7)}">
					        </c:out>...</c:when>
					        <c:otherwise>
					        <c:out value="${completePatient.paName}">
					        </c:out></c:otherwise>
						</c:choose>
					</td>
					<td class="td-padding">
						<c:choose>
					        <c:when test="${fn:substring(completePatient.paReg, 0, 1) gt 0}">
					        19<c:out value="${fn:substring(completePatient.paReg, 0, 2)}">
					        </c:out></c:when>
					        <c:otherwise>
					        20<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:otherwise>
						</c:choose>
						-${fn:substring(completePatient.paReg, 2, 4)}-${fn:substring(completePatient.paReg, 4, 6)}
					</td>
					<td>
						<button class="dduk-btn-danger btn-state" style="width: 57px;">진료 완료</button>
					</td>
				</tr>
			</c:forEach>
		</table>
		</div>
	</div>
	
	
	<div>
		<div class="dduk-inner-border rcptCenter">
			<div class="dduk-title-area">
				<h2>환자 정보 조회<input type="text" id="search" class="dduck-input search" placeholder="환자 이름을 검색해주세요" autocomplete="off"></h2>
			</div>
			<div class="autocomplete"></div>
				<div class="dduk-row getPatientInfo">
				<input type="hidden" id="patientNo" name="patientNo"/>
				<input type="hidden" id="hsrpType" name="hsrpType"/>
					<div class="patientInfoLeft">
						<h2 class="inH2">이름 : </h2>
						<h2 class="inH2">나이 : </h2>
						<h2 class="inH2">연락처 : </h2>
						<h2 class="inH2">주소 : </h2>
					</div>
					<div class="patientInfoRight">
						<input type="text" class="dduck-input info-input" id="patientName" disabled/>
						<input type="text" class="dduck-input info-input" id="patientAge" disabled/>
						<input type="text" class="dduck-input info-input" id="patientPh" disabled/>
						<input type="text" class="dduck-input info-input" id="patientAdd" disabled style="width:340px;"/>
					</div>
					<div class="patientInfoLeft">
						<h2 class="inH2">성별 : </h2>
						<h2 class="inH2">건강보험 : </h2>
						<h2 class="inH2">예약여부 : </h2>
					</div>
					<div class="patientInfoRight">
						<h2 class="inH2">남성&nbsp;<input type="radio" id="male" name="male" disabled/>&nbsp;&nbsp;&nbsp;
						여성&nbsp;<input type="radio" id="female" name="female" disabled/></h2>
						<h2 class="inH2">여&nbsp;<input type="radio" id="insrYes" name="insrYes" disabled/>&nbsp;&nbsp;&nbsp;
						부&nbsp;<input type="radio" id="insrNo" name="insrNo" disabled/></h2>
						<h2 class="inH2">여&nbsp;<input type="radio" id="rsvtYes" name="rsvtYes" disabled/>&nbsp;&nbsp;&nbsp;
						부&nbsp;<input type="radio" id="rsvtNo" name="rsvtNo" disabled/></h2>
						<button type="button" class="dduk-btn-active" id="btnAddReception" data-bs-toggle="modal" data-bs-target="#createReceptionModal"
						style="position: relative; left: 100px; top: 20px;">접수</button>
					</div>
				</div>
		</div>
		<div class="dduk-inner-border rcptCenter">
			<div class="dduk-title-area">
				<h2>오늘 예약 리스트</h2>
			</div>
			<div class="card-body table-responsive p-0" style="height: 250px;">
					<table class="table table-head-fixed text-nowrap">
						<thead>
							<tr class="tr-padding">
								<th>No</th>
								<th>예약시간</th>
								<th>이름</th>
								<th>담당의</th>
								<th>내원사유</th>
							</tr>
						</thead>
						<tbody>
							<tr class="tr-padding">
								<td class="td-padding gray-text">1</td>
								<td class="td-padding gray-text">09:30</td>
								<td class="td-padding gray-text">김복자</td>
								<td class="td-padding gray-text">김영남</td>
								<td class="td-padding gray-text">종아리 통증 호소</td>
							</tr>
							<tr>
								<td class="td-padding gray-text">2</td>
								<td class="td-padding gray-text">10:30</td>
								<td class="td-padding gray-text">황용철</td>
								<td class="td-padding gray-text">화타</td>
								<td class="td-padding gray-text">발목 염좌</td>
							</tr>
							<tr>
								<td class="td-padding gray-text">3</td>
								<td class="td-padding gray-text">11:30</td>
								<td class="td-padding gray-text">이말자</td>
								<td class="td-padding gray-text">화타</td>
								<td class="td-padding gray-text">새끼 손가락 골절</td>
							</tr>
							<tr>
								<td class="td-padding gray-text">4</td>
								<td class="td-padding gray-text">14:00</td>
								<td class="td-padding gray-text">마리사 라노바</td>
								<td class="td-padding gray-text">허준</td>
								<td class="td-padding gray-text">오십견 증상 호소</td>
							</tr>
						</tbody>
					</table>
				</div>
		</div>
	</div>
	
	<div class="dduk-body-border docOfcWrap"  style="position: relative;">
		<div class="dduk-title-area">
			<h2>진료실 현황</h2>
		</div>
		
		<div class="dduk-inner-border docOfc">
			<div class='dduk-row'>
				<h3>진료실 1</h3><p>담당의 : 김영남</p>
			</div>
			<div>
				<table>
					<tr class="tr-padding">
						<th class="td-padding gray-text" style="width:40px;">No</th>
						<th class="td-padding gray-text paName" style="width:90px;">이름</th>
						<th class="td-padding gray-text" style="width:90px">생년월일</th>
						<th class="td-padding gray-text" style="text-align:center">상태</th>
					</tr>
					<c:forEach var="waitingClinicPatient" items="${docOfcList}" varStatus="status">
						<c:if test="${waitingClinicPatient.hsrpState == 'RCST02' && waitingClinicPatient.empNo == 'test1'}">
						<tr class="tr-padding tr-paInfo">
							<td class="td-padding">
								${status.count-1}
							</td>
							<td height="48px" class="td-padding">
								<c:choose>
							        <c:when test="${fn:length(waitingClinicPatient.paName) gt 9}">
							        <c:out value="${fn:substring(waitingClinicPatient.paName, 0, 7)}">
							        </c:out>...</c:when>
							        <c:otherwise>
							        <c:out value="${waitingClinicPatient.paName}">
							        </c:out></c:otherwise>
								</c:choose>
							</td>
							<td class="td-padding">
								<c:choose>
							        <c:when test="${fn:substring(waitingClinicPatient.paReg, 0, 1) gt 0}">
							        19<c:out value="${fn:substring(waitingClinicPatient.paReg, 0, 2)}">
							        </c:out></c:when>
							        <c:otherwise>
							        20<c:out value="${fn:substring(waitingClinicPatient.paReg, 0, 2)}">
							        </c:out></c:otherwise>
								</c:choose>
								-${fn:substring(waitingClinicPatient.paReg, 2, 4)}-${fn:substring(waitingClinicPatient.paReg, 4, 6)}
							</td>
							<td class="td-padding">
								<c:choose>
									<c:when test="${waitingClinicPatient.clinicState=='CRST01'}">
										<button class='dduk-btn-danger btn-state'>진료중</button>
									</c:when>
									<c:otherwise>
										<button class='dduk-btn-disabled btn-state'>대기중</button>
									</c:otherwise>
								</c:choose>
							</td>
						</tr>
						</c:if>
					</c:forEach>
				</table>
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div class='dduk-row'>
				<h3>진료실 2</h3><p>담당의 : 화타</p>
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div class='dduk-row'>
				<h3>진료실 3</h3><p>담당의 : </p>
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div class='dduk-row'>
				<h3>진료실 4</h3><p>담당의 : </p>
			</div>
		</div>
	</div>
	
	<!-- 모달 임포트 -->
	<c:import url="../common/modal.jsp"></c:import>
<%-- <script src="<c:url value="/resources/script/searchByChosung.js" />"></script> --%>
<script>
//주민번호를 생년월일로 변환
function formatResidentNumber(residentNumber) {
	
	// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
    let year = "";
    if(Number(residentNumber.substr(0,1)) <= 3){
    	year += "20";
    } else {
    	year += "19";
    }
    year += residentNumber.substr(0,2);
    
    
    let month = residentNumber.substr(2,2);
    let day = residentNumber.substr(4,2);
    
    let birthDay = year + "-" + month + "-" + day;
    return birthDay;
}

//생년월일로 만 나이 구하기
function getAge(paBirthDay) {
	
	// 현재날짜, 생일로 날짜계산
    const currentDate = new Date();
    const birthdateDate = new Date(paBirthDay);
    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

    // 현재와 생일의 월, 날짜 얻어주기
	const currentMonth = currentDate.getMonth();
	const birthdateMonth = birthdateDate.getMonth();
	const currentDay = currentDate.getDate();
	const birthdateDay = birthdateDate.getDate();

	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
   		age--;
	}
    return age;
}

//주민등록번호로 환자 정보 가져오고 인풋창에 세팅
function searchPatientByReg(paReg){
	$.ajax({
		url: "/ams/searchPatientByReg",
		contentType:"application/json;charset=utf-8",
		data:paReg,
		type: 'post',
		beforeSend:function(xhr){
		xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		},
		success: function(rst){
			console.log(rst);
			//주민번호 => 생년월일
			let birthDay = formatResidentNumber(rst.paReg);
			//생년월일=> 나이
			let age = getAge(birthDay);
			
			//환자 번호 hidden에 넣기
			$("#patientNo").val(rst.paNo);
			//내원코드 넣어놓기
			$("#hsrpType").val("RCTY01");
			
			$("#patientName").html("");
			$("#patientAge").html("");
			$("#patientPh").html("");
			$("#patientAdd").html("");
			$("#male").attr("checked",false);
			$("#female").attr("checked",false);
			$("#insrYes").attr("checked",false);
			$("#insrNo").attr("checked",false);					
			$("#rsvtYes").attr("checked",false);
			$("#rsvtNo").attr("checked",false);					
			
			$("#patientName").val(rst.paName);
			$("#patientAge").val("만 " + age + "세");
			$("#patientPh").val(rst.paPh);
			$("#patientAdd").val(rst.paAdd1 + " " + rst.paAdd2);
			if(rst.paSex===('남')){
				$("#male").attr("checked",true);
			}else{
				$("#female").attr("checked",true);
			}
			
			if(rst.paInsrYn===('ISYN01')){
				$("#insrYes").attr("checked",true);
			}else{
				$("#insrNo").attr("checked",true);
			}
			
			$("#rsvtNo").attr("checked",true);
			
			$("#search").val("");
		},
		error: function(xhr, status, error){
			console.log('Error:', xhr, status, error);
		}
	});
};

//검색결과의 배열인 data를 이용해서 테이블로 만들어주는 함수
// data에는 검색결과의 배열이 들어오고
// width에는 내가 주고       싶은 각각의 td값의 width를 넣으면 된다
function updateResultTable(data, width){
   $('.autocomplete').html('');
   let cont = "";
   
   // 우선 배열의 길이만큼 실행
   $.each(data, function(index, str){
	   cont += "<tr class='option'>";
	   
      // ,를 정규식으로 만들어줌
      let regex = new RegExp(',', 'g');
      // 배열의 한 요소에서 , 의 개수를 파악 후 그 개수만큼 반복
      let matches = str.match(regex);
      let repeat = matches.length+1;
      
      // 배열 안의 구문자(,)의 개수만큼 실행 = td(컬럼)의 개수
      for(let i = 0; i < repeat; i++){
         let value = str.split(',')[i];
         cont += "<td style='width:"+width+"'>"+value+"</td>"
      }
      
      cont += "</tr>"
   })
   
   $('.autocomplete').append(cont);
}

// 검색결과를 저장하기 위한 변수
var dataList = [];

$(document).ready(function() {
	//자동 검색 데이터 불러오기
	$.ajax({
			url: "/ams/getPatientList",
			dataType: 'json',
			type: 'get',
			beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				$.each(rst, function(index,vo){
					let str = "";
					$.each(vo, function(index, column){
						if(index == 'paName'){
							str += (column);
						}
						if(index == 'paReg'){
							str += (column + ',');
						}
					})
					dataList.push(str);
				})
				updateResultTable(dataList, 100);
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
	});
	
	//검색 결과 클릭 시
	$(document).on('click', '.option', function(){
		// css를 이용해 검색결과 숨기기/보이기
		toggleTableSearch();
		
		// 주민등록번호만 가져오기
		let paReg = $(this).text().substring(0,14);
		
		// 주민등록번호로 환자 정보 가져오고 인풋창에 세팅
		searchPatientByReg(paReg);
	});
	
	
	// css를 이용해 검색결과 숨기기/보이기
	$(document).on('click', '#search', toggleTableSearch);
	function toggleTableSearch(){
		
		// 만약 배열의 길이가 0이면(검색 결과가 없으면) 함수를 종료시켜서 미리보기가 안되도록 함
		if(dataList.length === 0){
			return;
		}
		
		let $result = $('.autocomplete');
		$result.toggleClass('active');
	}
	
	// 검색어 입력시
	$(document).on('keyup', '#search', function() {
		let value = $('#search').val().trim();
		console.log("입력값",value);
		let matchDataList = dataList.filter((label) => label.includes(value));
		console.log("필터",matchDataList);
		updateResultTable(matchDataList, []);
	});
	 
	 //대기 버튼을 누르면 완료가 사라짐
	 $('#inner-tab1').click(function(){
		$('.waiting').attr('style', 'display: block');
		$('.complete').attr('style', 'display: none');
		$('#Adm-scroll').attr('style', 'display: none');
		$('#inner-tab1').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
	 });
	 //완료 버튼을 누르면 대기가 사라짐
	 $('#inner-tab2').click(function(){
		$('.complete').attr('style', 'display: block');
		$('.waiting').attr('style', 'display: none');
		$('#Adm-scroll').attr('style', 'display: block');
		$('#inner-tab1').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
	 });
		 
	//환자 클릭시 이벤트
	$(document).on("click", ".tr-paInfo", function() {
		// 환자 번호 저장
		let paReg = $(this).data('pareg');
		console.log(paReg);
		// 이전에 선택된 요소의 클래스 초기화
        $(".tr-paInfo").removeClass("selected");
        //현재 클릭한 요소에 select클래스 추가
        $(this).addClass("selected");
        
        searchPatientByReg(paReg);
	});
	
	//접수 저장 버튼 클릭 시
	$("#btnSaveReception").on('click',function(){
		let hsrpReason = $("#reasonForVisit").val();
		let patientNo = $("#patientNo").val();
		let hsrpType = $("#hsrpType").val();
		let hospitalReceptionVO = {
				"hsrpReason":hsrpReason,
				"paNo":patientNo,
				"empNo":empNo,
				"hsrpType":hsrpType}
		
		$.ajax({
			url: "/ams/addReception",
			type: 'post',
			data: JSON.stringify(hospitalReceptionVO),
			contentType:"application/json;charset=utf-8",
			beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				$("#createReceptionModal").modal('hide');
				$(".fade").attr('style', 'display: none');
				if(rst>0){
	           		Swal.fire({
	                    title: '접수 성공',
	                    icon: 'success',
	                    showCancelButton: false,
	                    confirmButtonColor: '#0ABAB5',
	                    cancelButtonColor: '#8D9EA5',
	                    confirmButtonText: '확인',
	                    cancelButtonText: '취소'
	                 }).then((result) => {
	                    // 확인버튼 클릭시
	                    if (result.isConfirmed) {
							}
						})
				}
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
				$("#createReceptionModal").modal('hide');
				$(".fade").attr('style', 'display: none');
				Swal.fire({
	                  title: '접수 실패',
	                  icon: 'error',
	                  showCancelButton: false,
	                  confirmButtonColor: '#0ABAB5',
	                  cancelButtonColor: '#8D9EA5',
	                  confirmButtonText: '확인',
	                  cancelButtonText: '취소'
					});
			}
		});
	});
});
</script>
</body>
</html>